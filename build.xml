<project name="FacebookLinkBench" default="dist" basedir=".">
  <property name="linkbench.version" value="0.1"/>

    <description>
        simple example build file
    </description>
  <!-- set global properties for this build -->
  <property name="src" location="src"/>
  <property name="build" location="build"/>
  <property name="dist"  location="dist"/>
  <property name="lib"  location="lib"/>
  <property name="test.output"  location="test-output"/>
  <property name="test.rawoutput"  location="${test.output}/raw"/>
  <property name="test.tmp"  location="${test.output}/tmp"/>
  <property name="test.report"  location="${test.output}/report"/>
  <property name="linkbench.jar" 
            value="${dist}/FacebookLinkBench-${linkbench.version}.jar"/>
  <property name="linkbench.latest.jar" value="${dist}/FacebookLinkBench.jar"/>

  <!-- By default, debugging symbols are not created. This
       can be overridden with command line property -->
  <property name="debug" value="false"/>

  <target name="init">
    <!-- Create the time stamp -->
    <tstamp/>
    <!-- Create the build directory structure used by compile -->
    <mkdir dir="${build}"/>
  </target>

  <target name="compile" depends="init"
        description="compile the source " >
    <!-- Compile the java code from ${src} into ${build} -->
    <javac includeantruntime="false" srcdir="${src}" destdir="${build}"
           debug="${debug}">
      <classpath>
        <pathelement path="${classpath}"/>
        <fileset dir="lib">
          <include name="**/*.jar"/>
        </fileset>
        <pathelement location="classes"/>
        <dirset dir="${build}">
          <include name="apps/**/classes"/>
          <exclude name="apps/**/*Test*"/>
        </dirset>
      </classpath>
    </javac>
  </target>

  <target name="dist" depends="compile"
        description="generate the distribution" >
    <!-- Create the distribution directory -->
    <mkdir dir="${dist}"/>

    <!-- Put everything in ${build} into the jar file -->
    <jar jarfile="${linkbench.jar}" basedir="${build}"/>

    <!-- Symlink latest -->
    <delete file="${linkbench.latest.jar}" />
    <symlink link="${linkbench.latest.jar}" resource="${linkbench.jar}" />
  </target>

  <target name="test" description="Execute unit tests"
        depends="dist">
    <mkdir dir="${test.rawoutput}"/>
    <junit printsummary="true" failureproperty="junit.failure" fork="on">
      <classpath>
        <pathelement location="${linkbench.jar}"/>
        <fileset dir="${lib}">
          <include name="**/*.jar"/>
        </fileset>
      </classpath>

      <assertions> <enable /> </assertions>
      <batchtest todir="${test.rawoutput}">
        <fileset dir="${build}"> 
          <include name="**/*Test*.class"/>
          <exclude name="**/LinkStoreHBaseGeneralAtomicityTesting.class"/>
          <exclude name="**/*TestBase.class"/>
          <exclude name="**/MySqlTestConfig.class"/>
          <exclude name="**/DistributionTestBase.class"/>
          <exclude name="**/*$*.class"/> <!-- ignore nested classes -->
        </fileset>
        <formatter type="xml"/>
      </batchtest>
    </junit>
    <mkdir dir="${test.tmp}"/>
    <mkdir dir="${test.report}"/>
    <junitreport todir="${test.tmp}">
      <fileset dir="${test.rawoutput}"/>
      <report todir="${test.report}"/>
    </junitreport>
    <fail if="junit.failure" message="Unit test(s) failed.  See reports!"/>
  </target>

  <target name="clean"
        description="clean up" >
    <!-- Delete generated directory trees -->
    <delete dir="${build}"/>
    <delete dir="${dist}"/>
    <delete dir="${test.output}"/>
  </target>
</project>
